
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;
pcre_jit on;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;



	upstream web_server {
		server web:5000;
	}

	proxy_cache_path /tmp levels=1:2 keys_zone=my_cache:10m inactive=10m use_temp_path=off;

	server {

		listen 80;

		location / {
			proxy_pass http://web_server;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_redirect off;
		}

		location /test/ {
			proxy_pass http://web_server;
			proxy_cache my_cache;
			proxy_cache_key $request_uri;
			add_header X-Cache-Status $upstream_cache_status;
			
			if ($request_method = PURGE) {

				set $lua_purge_path "/tmp/";
				set $lua_purge_levels "1:2";
				set $lua_purge_upstream "http://web_server";

				content_by_lua_file /lua/purge.lua;
			}
	
		}

	}
}